# ------------------------------------------------------------------------
#
# 2024 TOTOLOOK LABORATORY (https://totolook.it)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License
#
# ------------------------------------------------------------------------

# set base Docker image to Alpine Docker image
FROM  eclipse-temurin:17.0.6_10-jdk-alpine
# FROM  eclipse-temurin:11.0.19_7-jdk-alpine
LABEL maintainer="Antonio dG <totodg@totolook.it>"
LABEL org.opencontainers.image.description "GA verion of Micro Ingrator build by Toto"
LABEL org.opencontainers.image.authors "WSO2 <wso2@wso2.com> and Antonio dG <totodg@totolook.it>"
LABEL org.opencontainers.image.version =${WSO2_SERVER_VERSION}

ENV LANG='it_IT.UTF-8' LANGUAGE='it_IT:it' LC_ALL='it_IT.UTF-8' 
ENV JAVA_HOME=/opt/java/openjdk \
    PATH="/opt/java/openjdk/bin:$PATH"

# set Docker image build arguments
# build arguments for user/group configurations
ARG USER=wso2carbon
ARG USER_ID=802
ARG USER_GROUP=wso2
ARG USER_GROUP_ID=802
ARG USER_HOME=/home/${USER}
# build arguments for WSO2 product installation
ARG WSO2_SERVER_NAME=wso2mi
ARG WSO2_SERVER_VERSION=4.2.0
ARG WSO2_SERVER_REPOSITORY=product-is
ARG WSO2_SERVER=${WSO2_SERVER_NAME}-${WSO2_SERVER_VERSION}
ARG WSO2_DIST=${WSO2_SERVER_NAME}-${WSO2_SERVER_VERSION}
ARG WSO2_SERVER_HOME=${USER_HOME}/${WSO2_SERVER}
# build argument for MOTD
ARG MOTD='printf "\n\
Welcome to WSO2 Totolook  Docker resources.\n\
--------------------------------- \n\
This Docker container comprises of a WSO2 product, running with its latest GA release \n\
which is under the Apache License, Version 2.0. \n\
Read more about Apache License, Version 2.0 here @ http://www.apache.org/licenses/LICENSE-2.0.\n\
Please dont be casoDown\n "'
ENV ENV=${USER_HOME}"/.ashrc"
# create the non-root user and group and set MOTD login message
RUN \
    addgroup -S -g ${USER_GROUP_ID} ${USER_GROUP} \
    && adduser -S -u ${USER_ID} -h ${USER_HOME} -G ${USER_GROUP} ${USER} \
    && echo ${MOTD} > "${ENV}"

# create Java prefs dir
# this is to avoid warning logs printed by FileSystemPreferences class
RUN \
    mkdir -p ${USER_HOME}/.java/.systemPrefs \
    && mkdir -p ${USER_HOME}/.java/.userPrefs \
    && chmod -R 755 ${USER_HOME}/.java \
    && chown -R ${USER}:${USER_GROUP} ${USER_HOME}/.java

# copy init script to user home
COPY --chown=wso2carbon:wso2 docker-entrypoint.sh ${USER_HOME}/

# # install required packages
# RUN \
#     apk update \
#     && apk add --no-cache netcat-openbsd \
#     && apk add unzip \
#     && apk add wget

## set the user and work directory
USER ${USER_ID}
WORKDIR ${USER_HOME}

COPY --chown=wso2carbon:wso2 ${WSO2_DIST}.zip ${USER_HOME}/

RUN \
    unzip -d ${USER_HOME} ${WSO2_DIST}.zip \
    && chown wso2carbon:wso2 -R ${WSO2_SERVER_HOME} \
    && rm -f ${WSO2_DIST}.zip


# set environment variables
ENV WORKING_DIRECTORY=${USER_HOME} \
    WSO2_SERVER_HOME=${WSO2_SERVER_HOME}

# expose ports
EXPOSE 4000 9763 9443

# initiate container and start WSO2 Carbon server
ENTRYPOINT ["/home/wso2carbon/docker-entrypoint.sh"]
